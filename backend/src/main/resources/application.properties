spring.application.name=Axlr8Backend
server.port=8081

# general app configurations
# spring.datasource.url=jdbc:postgresql://localhost:5432/axlr8
# spring.datasource.url=jdbc:postgresql://db:5432/axlr8
spring.jpa.hibernate.ddl-auto=update
# spring.datasource.username=postgres
# spring.datasource.password=#Cat098

#deployment configs
#spring.datasource.url=jdbc:postgresql://dpg-clkljq6aov6s738a7ci0-a.ohio-postgres.render.com/axlr8
spring.datasource.url=jdbc:postgresql://dpg-clkljq6aov6s738a7ci0-a/axlr8
spring.datasource.username=axlr8db
spring.datasource.password=nbsumySiRcMnrh9bBhDHekusYyEEGPtk
spring.datasource.driver-class-name=org.postgresql.Driver

# for docker containers
#spring.datasource.password=docker

#spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.datasource.hikari.auto-commit=false
#spring.jpa.defer-datasource-initialization=true
spring.jackson.time-zone=UTC

#enabling spring to handle large file uploads(images)
server.tomcat.max-swallow-size=-1

server.error.include-message=always

#spring.boot.admin.client.instance.service-base-url=http://localhost:8081
#spring.boot.admin.client.url=http://localhost:8080
spring.boot.admin.client.instance.service-base-url=https://axlr8-backend-kyxs.onrender.com/
spring.boot.admin.client.url=https://axlr8-admin-m1q8.onrender.com
spring.boot.admin.client.username=admin
spring.boot.admin.client.password=admin

#config to give server info
spring.security.user.name = axlr8backend
spring.security.user.password= axlr8admin
spring.boot.admin.client.instance.metadata.user.name=${spring.security.user.name}
spring.boot.admin.client.instance.metadata.user.password=${spring.security.user.password}


management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

logging.level.root=warn
logging.level.com.axlr8.backend=trace
logging.file.name=Axlr8Backend.log
